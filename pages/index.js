import { useEffect, useState } from "react";
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Banner from '../components/banner'
import Card from '../components/card'
import CoffeeStoresData from '../data/coffee-stores.json'
import { fetchCooffeeStores } from '../lib/coffee-store'
import useTrackLocation from "../hooks/use-track-location";

export async function getStaticProps(context) {

  const coffeeStores = await fetchCooffeeStores();
  return {
    props: {
      CoffeeStores: coffeeStores,
    }, // will be passed to the page component as props
  }
}

export default function Home(props) {

  const { handleTrackLocation, latLong, locationErrorMsg, isFindingLocation } = useTrackLocation();

  console.log({ latLong, locationErrorMsg });

  const [coffeeStores, setCoffeeStores] = useState('');
  const [coffeeStoresError, setCoffeeStoresError] = useState(null);

  useEffect(() => {
    async function setCoffeeStoresByLocation() {
      if (latLong) {
        try {
          const fetchedCoffeeStores = await fetchCooffeeStores(latLong, 30);
          console.log({ fetchedCoffeeStores });
          setCoffeeStores(fetchedCoffeeStores);
          //set coffee stores
        } catch (error) {
          //set error
          console.log("Error", { error });
          setCoffeeStoresError(error.message);
        }
      }
    }
    setCoffeeStoresByLocation();
  }, [latLong]);


  const handleOnBannerBtnClick = () => {
    handleTrackLocation();
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={isFindingLocation ? "Locating..." : "View stores nearby"}
          handleOnClick={handleOnBannerBtnClick} />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}

        <div className={styles.heroImage}>
          <Image src="/static/hero-image.png" width={700} height={400} />
        </div>

        {/* Dynamic */}
        <div className={styles.sectionWrapper}>
          {coffeeStores.length > 0 && <div>
            <h2 className={styles.heading2}>Coffee near me</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((coffeeStore) => {
                return (
                  <Card className={styles.card}
                    key={coffeeStore.id}
                    name={coffeeStore.name}
                    imgUrl='https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80'
                    href={`coffee-store/${coffeeStore.id}`} />
                );
              })}
            </div>
          </div>}
        </div>


        <div className={styles.sectionWrapper}>
          {props.CoffeeStores.length > 0 && <div>
            <h2 className={styles.heading2}>Coffee near Florence</h2>
            <div className={styles.cardLayout}>
              {props.CoffeeStores.map((coffeeStore) => {
                return (
                  <Card className={styles.card}
                    key={coffeeStore.id}
                    name={coffeeStore.name}
                    imgUrl='https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80'
                    href={`coffee-store/${coffeeStore.id}`} />
                );
              })}
            </div>
          </div>}
        </div>
      </main>
    </div>
  )
}
